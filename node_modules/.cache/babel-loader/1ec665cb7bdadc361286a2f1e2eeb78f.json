{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mgpocky/learn-react/src/App.js\";\nimport './App.css';\nimport YoutubeVideo from './01/YoutubeVideo';\nimport YoutubeLylic from './01/YoutubeLylic';\nimport ResultLylic from './01/ResultLylic';\nimport LylicBlock from './01/LylicBlock';\nimport { Component } from 'react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.shuffle = this.shuffle.bind(this);\n    this.selectCard = this.selectCard.bind(this);\n    this.resetCard = this.resetCard.bind(this);\n    this.validate = this.validate.bind(this);\n    let origin = [\"여보세요\", \"거기\", \"누구\", \"없소\", \"나를\", \"사랑하는\", \"사람은\"];\n    const emptyarr = [];\n\n    for (let i = 0; i < origin.length; i++) {\n      emptyarr.push(\"____\");\n    }\n\n    let shufflearr = origin.slice();\n    this.shuffle(shufflearr);\n    const exampleItems = shufflearr.map((value, index) => /*#__PURE__*/_jsxDEV(LylicBlock, {\n      value: value,\n      id: index,\n      func: this.selectCard\n    }, value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 59\n    }, this));\n    const selectItems = emptyarr.map((value, index) => /*#__PURE__*/_jsxDEV(LylicBlock, {\n      value: value,\n      id: index\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 56\n    }, this));\n    console.log(origin);\n    this.state = {\n      origin: origin,\n      arr: shufflearr,\n      select: selectItems,\n      link: \"//www.youtube.com/embed//lJPALoI4Y8I?start=41&end=48\",\n      index: 0,\n      example: exampleItems,\n      finish: false\n    };\n    console.log(this.state.origin);\n  }\n\n  componentDidUpdate() {\n    if (this.state.index === this.state.arr.length && !this.state.finish) {\n      if (this.validate()) {\n        console.log(\"Success!\");\n        console.log(this.state.select);\n      } else {\n        console.log(\"Fail!\");\n        this.fillColor(\"red\");\n      }\n\n      this.setState(() => ({\n        finish: !this.state.finish\n      }));\n    }\n  }\n\n  fillColor(color) {\n    let arr = this.state.arr.slice();\n    let change = this.state.select;\n    change[0] = /*#__PURE__*/_jsxDEV(LylicBlock, {\n      className: color,\n      value: change[0].props.value,\n      id: 0,\n      func: this.resetCard\n    }, this.state.index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this);\n    this.setState((state, props) => ({\n      select: change\n    }));\n  }\n\n  selectCard(e) {\n    if (this.state.index > this.state.arr.length - 1) return; //console.log(e);\n    //console.log(e.target.id);\n\n    let arr = this.state.arr.slice();\n    let change = this.state.select.slice();\n    change[this.state.index] = /*#__PURE__*/_jsxDEV(LylicBlock, {\n      className: \"\",\n      value: arr[e.target.id],\n      id: e.target.id,\n      func: this.resetCard\n    }, this.state.index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 32\n    }, this); //console.log(arr);\n\n    this.setState((state, props) => ({\n      index: this.state.index + 1,\n      select: change\n    }));\n  }\n\n  resetCard(e) {\n    const arr = this.state.arr;\n    const emptyarr = [];\n\n    for (let i = 0; i < arr.length; i++) {\n      emptyarr.push(\"____\");\n    }\n\n    const selectItems = emptyarr.map((value, index) => /*#__PURE__*/_jsxDEV(LylicBlock, {\n      value: value,\n      id: index\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 56\n    }, this)); //console.log(e);\n    //console.log(e.target.id);\n\n    this.setState((state, props) => ({\n      index: 0,\n      select: selectItems,\n      finish: false\n    }));\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n\n    return a;\n  }\n\n  validate() {\n    const selectedList = this.state.select.slice();\n    const originalList = this.state.origin.slice();\n    console.log(originalList);\n    console.log(selectedList);\n\n    for (let i = 0; i < this.state.arr.length; i++) {\n      if (originalList[i] !== selectedList[i].props.value) {\n        console.log(i);\n        console.log(selectedList[i].props.value);\n        console.log(originalList[i]);\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(YoutubeVideo, {\n        link: this.state.link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResultLylic, {\n        items: this.state.select\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YoutubeLylic, {\n        func: this.selectCard,\n        items: this.state.example\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mgpocky/learn-react/src/App.js"],"names":["YoutubeVideo","YoutubeLylic","ResultLylic","LylicBlock","Component","App","constructor","props","shuffle","bind","selectCard","resetCard","validate","origin","emptyarr","i","length","push","shufflearr","slice","exampleItems","map","value","index","selectItems","console","log","state","arr","select","link","example","finish","componentDidUpdate","fillColor","setState","color","change","e","target","id","a","j","Math","floor","random","selectedList","originalList","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport YoutubeVideo from './01/YoutubeVideo';\nimport YoutubeLylic from './01/YoutubeLylic';\nimport ResultLylic from './01/ResultLylic';\nimport LylicBlock from './01/LylicBlock';\nimport { Component } from 'react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.shuffle = this.shuffle.bind(this);\n    this.selectCard = this.selectCard.bind(this);\n    this.resetCard = this.resetCard.bind(this);\n    this.validate = this.validate.bind(this);\n    let origin = [\"여보세요\", \"거기\", \"누구\", \"없소\", \"나를\", \"사랑하는\", \"사람은\"];\n    const emptyarr = [];\n    for(let i=0;i<origin.length;i++) {\n      emptyarr.push(\"____\");\n    }\n    let shufflearr = origin.slice();\n    this.shuffle(shufflearr);\n    const exampleItems = shufflearr.map((value, index) => <LylicBlock key={value} value={value} id={index} func={this.selectCard}/>);\n    const selectItems = emptyarr.map((value, index) => <LylicBlock key={index} value={value} id={index}/>);\n    console.log(origin);\n    this.state = {\n      origin: origin,\n      arr: shufflearr,\n      select: selectItems,\n      link: \"//www.youtube.com/embed//lJPALoI4Y8I?start=41&end=48\",\n      index: 0,\n      example: exampleItems,\n      finish: false,\n    }\n    console.log(this.state.origin);\n  }\n  componentDidUpdate() {\n    if(this.state.index === this.state.arr.length && !this.state.finish) {\n      if(this.validate()) {\n        console.log(\"Success!\");\n        console.log(this.state.select);\n      }\n      else {\n        console.log(\"Fail!\");\n        this.fillColor(\"red\");\n      }\n      this.setState(() => ({\n        finish: !this.state.finish,\n      }));\n    }\n  }\n  fillColor(color) {\n    let arr = this.state.arr.slice();\n    let change = this.state.select;\n    change[0] = <LylicBlock className={color} key={this.state.index} value={change[0].props.value} id={0} func={this.resetCard}/>;\n    this.setState((state, props) => ({\n      select: change,\n    }));\n  }\n  selectCard(e) {\n    if(this.state.index > this.state.arr.length - 1)\n      return;\n    //console.log(e);\n    //console.log(e.target.id);\n    let arr = this.state.arr.slice();\n    let change = this.state.select.slice();\n    change[this.state.index] = <LylicBlock className=\"\" key={this.state.index} value={arr[e.target.id]} id={e.target.id} func={this.resetCard}/>;\n\n    //console.log(arr);\n    this.setState((state, props) => ({\n      index: this.state.index + 1,\n      select: change,\n    }));\n  }\n  resetCard(e) {\n    const arr = this.state.arr;\n    const emptyarr = [];\n    for(let i=0;i<arr.length;i++) {\n      emptyarr.push(\"____\");\n    }\n    const selectItems = emptyarr.map((value, index) => <LylicBlock key={index} value={value} id={index}/>);\n    //console.log(e);\n    //console.log(e.target.id);\n    this.setState((state, props) => ({\n      index: 0,\n      select: selectItems,\n      finish: false,\n    }));\n  }\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n  validate() {\n    const selectedList = this.state.select.slice();\n    const originalList = this.state.origin.slice();\n    console.log(originalList);\n    console.log(selectedList);\n    for(let i=0;i<this.state.arr.length;i++) {\n      if(originalList[i] !== selectedList[i].props.value) {\n        console.log(i);\n        console.log(selectedList[i].props.value);\n        console.log(originalList[i]);\n        return false;\n      }\n    }\n    return true;\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <YoutubeVideo link={this.state.link}></YoutubeVideo>\n        <ResultLylic items={this.state.select}/>\n        <br />\n        <br />\n        <br />\n        <YoutubeLylic func={this.selectCard} items={this.state.example}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}